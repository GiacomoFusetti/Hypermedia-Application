swagger: "2.0"
info:
  description: "This is a simple bookstore server with a book inventory, users and a shopping cart."
  version: "1.0.0"
  title: "Simple Bookstore"
  contact:
    email: "10451768@polimi.it"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:8080"
basePath: "/"
tags:
- name: "book"
  description: "Available books"
- name: "author"
  description: "Available authors"
- name: "event"
  description: "Available events"
- name: "cart"
  description: "Access to the cart"
- name: "user"
  description: "Operations about user"
- name: "faq"
  description: "Operations about faq"
- name: "genre"
  description: "Available genres"
- name: "session"
  description: "get current session"
schemes:
- "http"
paths:
  /books:
    get:
      tags:
      - "book"
      summary: "Books available in the inventory"
      description: "List of books available in the inventory"
      operationId: "booksGET"
      produces:
      - "application/json"
      parameters:
      - name: "offset"
        in: "query"
        description: "Pagination offset. Default is 0."
        required: false
        type: "integer"
      - name: "limit"
        in: "query"
        description: "Maximum number of items per page. Default is 20 and cannot exceed 500."
        required: false
        type: "integer"
      - name: "genre"
        in: "query"
        description: "Genre for filtering."
        required: false
        type: "integer"
      - name: "theme"
        in: "query"
        description: "Theme for filtering."
        required: false
        type: "integer"
      - name: "rating"
        in: "query"
        description: "Rating for filtering."
        required: false
        type: "integer"
      responses:
        200:
          description: "A collection of Books"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Book"
        404:
          description: "Unexpected error"
      x-swagger-router-controller: "Book"
  /books/{Id_book}:
    get:
      tags:
      - "book"
      summary: "Find book by ID"
      description: "Returns a book"
      operationId: "getBookById"
      produces:
      - "application/json"
      parameters:
      - name: "Id_book"
        in: "path"
        description: "ID of book to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Book"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Book not found"
      x-swagger-router-controller: "Book"
  /books_by_genre:
    get:
      tags:
      - "book"
      summary: "Books available in the inventory by genre"
      description: "List of books available in the inventory by genre"
      operationId: "booksbygenreGET"
      produces:
      - "application/json"
      parameters:
      - name: "offset"
        in: "query"
        description: "Pagination offset. Default is 0."
        required: false
        type: "integer"
      - name: "limit"
        in: "query"
        description: "Maximum number of items per page. Default is 20 and cannot exceed 500."
        required: false
        type: "integer"
      responses:
        200:
          description: "A collection of Books by genre"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Book"
        404:
          description: "Unexpected error"
      x-swagger-router-controller: "Book"
  /books_by_theme:
    get:
      tags:
      - "book"
      summary: "Books available in the inventory by theme"
      description: "List of books available in the inventory by theme"
      operationId: "booksbythemeGET"
      produces:
      - "application/json"
      parameters:
      - name: "offset"
        in: "query"
        description: "Pagination offset. Default is 0."
        required: false
        type: "integer"
      - name: "limit"
        in: "query"
        description: "Maximum number of items per page. Default is 20 and cannot exceed 500."
        required: false
        type: "integer"
      responses:
        200:
          description: "A collection of Books by theme"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Book"
        404:
          description: "Unexpected error"
      x-swagger-router-controller: "Book"
  /authors:
    get:
      tags:
      - "author"
      summary: "Authors available in the inventory"
      description: "List of authors available in the inventory"
      operationId: "authorsGET"
      produces:
      - "application/json"
      parameters:
      - name: "offset"
        in: "query"
        description: "Pagination offset. Default is 0."
        required: false
        type: "integer"
      - name: "limit"
        in: "query"
        description: "Maximum number of items per page. Default is 20 and cannot exceed 500."
        required: false
        type: "integer"
      responses:
        200:
          description: "A collection of Authors"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Author"
        404:
          description: "Unexpected error"
      x-swagger-router-controller: "Author"
  /authors/{Id_author}:
    get:
      tags:
      - "author"
      summary: "Find author by ID"
      description: "Returns a author"
      operationId: "getAuthorById"
      produces:
      - "application/json"
      parameters:
      - in: path
        name: Id_author
        description: "ID of author to return"
        required: true
        format: "int64"
        type: integer
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Author"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Author not found"
      x-swagger-router-controller: "Author"
  /events:
    get:
      tags:
      - "event"
      summary: "Events available in the inventory"
      description: "List of events available in the inventory"
      operationId: "eventsGET"
      produces:
      - "application/json"
      parameters:
      - name: "offset"
        in: "query"
        description: "Pagination offset. Default is 0."
        required: false
        type: "integer"
      - name: "limit"
        in: "query"
        description: "Maximum number of items per page. Default is 20 and cannot exceed 500."
        required: false
        type: "integer"
      responses:
        200:
          description: "A collection of Events"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Event"
        404:
          description: "Unexpected error"
      x-swagger-router-controller: "Event"
  /events/{Id_event}:
    get:
      tags:
      - "event"
      summary: "Find event by ID"
      description: "Returns a event"
      operationId: "getEventById"
      produces:
      - "application/json"
      parameters:
      - name: "Id_event"
        in: "path"
        description: "ID of event to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Event"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Event not found"
      x-swagger-router-controller: "Event"
  /user/login:
    post:
      tags:
      - "user"
      summary: "Login"
      description: "Login with a form"
      operationId: "userLoginPOST"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - name: "email"
        in: "formData"
        required: true
        type: "string"
      - name: "password"
        in: "formData"
        required: true
        type: "string"
      responses:
        200:
          description: "succesfull login"
        400:
          description: "bad request"
        404:
          description: "unauthorized"
      x-swagger-router-controller: "User"
  /user/logout:
    delete:
      tags:
      - "user"
      summary: "Logout"
      description: "Logout, delete session"
      operationId: "userLogoutDELETE"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      responses:
        200:
          description: "succesfull logout"
        400:
          description: "bad request"
        404:
          description: "unauthorized"
      x-swagger-router-controller: "User"
  /user/register:
    post:
      tags:
      - "user"
      summary: "Register"
      description: "Register into the store"
      operationId: "userRegisterPOST"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        200:
          description: "succesfull registration"
        404:
          description: "unauthorized"
      x-swagger-router-controller: "User"
  /cart/{Id_cart}:
    get:
      tags:
      - "cart"
      summary: "View the content of the cart"
      operationId: "cartIdGET"
      produces:
      - "application/json"
      parameters:
      - name: "Id_cart"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "succesful operartion"
          schema:
            $ref: "#/definitions/Cart"
        404:
          description: "unauthorized"
      x-swagger-router-controller: "Cart"
  /faq:
    get:
      tags:
      - "faq"
      summary: "View all the faqs"
      operationId: "faqGET"
      produces:
      - "application/json"
      parameters:
      - name: "offset"
        in: "query"
        description: "Pagination offset. Default is 0."
        required: false
        type: "integer"
      - name: "limit"
        in: "query"
        description: "Maximum number of items per page. Default is 20 and cannot exceed 500."
        required: false
        type: "integer"
      responses:
        200:
          description: "succesful operartion"
          schema:
            $ref: "#/definitions/Faq"
        404:
          description: "unauthorized"
      x-swagger-router-controller: "Faq"
  /genres:
    get:
      tags:
      - "genre"
      summary: "View all the genres"
      operationId: "genresGET"
      produces:
      - "application/json"
      parameters:
      - name: "offset"
        in: "query"
        description: "Pagination offset. Default is 0."
        required: false
        type: "integer"
      - name: "limit"
        in: "query"
        description: "Maximum number of items per page. Default is 20 and cannot exceed 500."
        required: false
        type: "integer"
      responses:
        200:
          description: "succesful operartion"
          schema:
            $ref: "#/definitions/Genre"
        404:
          description: "unauthorized"
      x-swagger-router-controller: "Genre"
  /session:
    get:
      tags:
        - "session"
      operationId: "sessionGET"
      produces:
      - "application/json"
      responses:
        200:
          description: "Current session"
        404:
          description: "Unexpected error"
      x-swagger-router-controller: "Session"
definitions:
  User:
    type: "object"
    properties:
      id:
        type: "integer"
      name:
        type: "string"
      email:
        type: "string"
    title: "User"
    description: "A user"
    example:
      id: 1
      name: "Giacomo"
      address: "DEIB"
      creditcard: "xyzabc"
  Author:
    type: "object"
    properties:
      id:
        type: "integer"
      name:
        type: "string"
      surname:
        type: "string"
      bio:
        type: "string"
      photo:
        type: "string"
    title: "Author"
    description: "An author"
    example:
      id: 1
      name: "Giacomo"
      surname: "Fuse"
      bio: "not today"
      photo: "pathname"
  Event:
    type: "object"
    properties:
      id:
        type: "integer"
      id_book:
        type: "integer"
      name:
        type: "string"
      date:
        type: "string"
      description:
        type: "string"
      image:
        type: "string"
    title: "Event"
    description: "An event"
    example:
      id: 1
      id_book: "1"
      name: "Cool event"
      date: "1 Jan 2019"
      description: "book presentation"
      image: "pathname"
  Cart:
    type: "object"
    properties:
      total:
        $ref: "#/definitions/Amount"
      books:
        type: "array"
        items:
          $ref: "#/definitions/Book"
    title: "Cart"
    description: "Order for books"
    example:
      total:
        currency: "eur"
        value: 80082819046101.171875
      books:
      - id: 0
        title: "Il deserto dei tartari"
        author: "Dino Buzzati"
        price:
          value: 10
          currency: "eur"
      - id: 0
        title: "Il deserto dei tartari"
        author: "Dino Buzzati"
        price:
          value: 10
          currency: "eur"
  Book:
    type: "object"
    required:
    - "price"
    - "title"
    properties:
      id:
        type: "integer"
        format: "int64"
      id_genre:
        type: "integer"
        format: "int64"
      id_themes:
        type: "integer"
        format: "int64"
      title:
        type: "string"
      description:
        type: "string"
      cover_img:
        type: "string"
      pages:
        type: "string"
      rating:
        type: "integer"
      price:
        $ref: "#/definitions/Amount"
      status:
        type: "string"
        description: "book availability in the inventory"
        enum:
        - "available"
        - "out of stock"
      support:
        type: "string"
        description: "book support in the inventory"
        enum:
        - "paper_based"
        - "ebook"
        - "both"
    title: "Book"
    description: "A book for sale in the store"
    example:
      id: 0
      title: "Il deserto dei tartari"
      author: "Dino Buzzati"
      price:
        value: 10
        currency: "eur"
      status: "available"
  Faq:
    type: "object"
    properties:
      id:
        type: "integer"
      question:
        type: "string"
      answer:
        type: "string"
    title: "Faq"
    description: "A Faq"
    example:
      id: 1
      question: "What is love?"
      answer: "baby don't hurt me"
  Genre:
    type: "object"
    properties:
      id:
        type: "integer"
      name:
        type: "string"
    title: "Genre"
    description: "A Genre"
    example:
      id: 1
      name: "Fantasy"
  Amount:
    type: "object"
    required:
    - "currency"
    - "value"
    properties:
      value:
        type: "number"
        format: "double"
        minimum: 0.01
        maximum: 1000000000000000
      currency:
        $ref: "#/definitions/Currency"
    description: "Price\n"
    example:
      currency: "eur"
      value: 11
  Currency:
    type: "string"
    pattern: "^[A-Z]{3,3}$"
    description: "some description\n"
    example: "eur"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"