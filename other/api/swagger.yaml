swagger: "2.0"
info:
  description: "This is a simple bookstore server with a book inventory, users and a shopping cart."
  version: "1.0.0"
  title: "Simple Bookstore"
  contact:
    email: "10451768@polimi.it"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "bookstore-hype.herokuapp.com"
basePath: "/"
tags:
- name: "book"
  description: "Available books"
- name: "author"
  description: "Available authors"
- name: "event"
  description: "Available events"
- name: "user"
  description: "Operations about user"
- name: "cart"
  description: "Access to the cart"
- name: "faq"
  description: "Operations about faq"
- name: "genre"
  description: "Available genres"
- name: "theme"
  description: "Available Themes"
schemes:
- "https"
paths:
  /books:
    get:
      tags:
      - "book"
      summary: "Books available in the inventory"
      description: "List of books available in the inventory"
      operationId: "booksGET"
      produces:
      - "application/json"
      parameters:
      - name: "offset"
        in: "query"
        description: "Pagination offset. Default is 0."
        required: false
        type: "integer"
      - name: "limit"
        in: "query"
        description: "Maximum number of items per page. Default is 12."
        required: false
        type: "integer"
      - name: "genre"
        in: "query"
        description: "Genre for filtering."
        required: false
        type: "integer"
      - name: "theme"
        in: "query"
        description: "Theme for filtering."
        required: false
        type: "integer"
      - name: "rating"
        in: "query"
        description: "Rating for filtering."
        required: false
        type: "integer"
      - name: "filter"
        in: "query"
        description: "All/bestSeller/OurSugestion filter."
        required: false
        type: "integer"
        enum: [0, 1, 2]
      - name: "format"
        in: "query"
        description: "All/paper/ebook filter."
        required: false
        type: "integer"
        enum: [0, 1, 2]
      - name: "search"
        in: "query"
        description: "Title of the book to search in the database"
        required: false
        type: "string"
      responses:
        200:
          description: "A collection of Books"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Book-List"
        404:
          description: "Books not found"
        500:
          description: "Internal Error"
      x-swagger-router-controller: "Book"
  /books/count:
    get:
      tags:
      - "book"
      summary: "Number of books in inventory"
      description: "Returns a number"
      operationId: "getBooksCount"
      produces:
      - "application/json"
      parameters:
      - name: "genre"
        in: "query"
        description: "Genre for filtering."
        required: false
        type: "integer"
      - name: "theme"
        in: "query"
        description: "Theme for filtering."
        required: false
        type: "integer"
      - name: "rating"
        in: "query"
        description: "Rating for filtering."
        required: false
        type: "integer"
      - name: "filter"
        in: "query"
        description: "All/bestSeller/OurSugestion filter."
        required: false
        type: integer
        enum: [0, 1, 2]
      - name: "format"
        in: "query"
        description: "All/paper/ebook filter."
        required: false
        type: "integer"
        enum: [0, 1, 2]
      - name: "search"
        in: "query"
        description: "Title of the book to search in the database"
        required: false
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "integer"
        404:
          description: "Book not found"
        500:
          description: "Internal Error"
      x-swagger-router-controller: "Book"
  /books/{Id_book}:
    get:
      tags:
      - "book"
      summary: "Find book by ID"
      description: "Returns a book"
      operationId: "getBookById"
      produces:
      - "application/json"
      parameters:
      - name: "offset"
        in: "query"
        description: "Pagination offset for similar books list. Default is 0."
        required: false
        type: "integer"
      - name: "limit"
        in: "query"
        description: "Maximum number of items for similar book list per page. Default is 6."
        required: false
        type: "integer"
      - name: "Id_book"
        in: "path"
        description: "ID of book to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Book"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Book not found"
        500:
          description: "Internal Error"
      x-swagger-router-controller: "Book"
  /books/{Id_book}/related_books:
    get:
      tags:
      - "book"
      summary: "Find related book by Id_book"
      description: "Returns a set of books"
      operationId: "getRelatedBooksById"
      produces:
      - "application/json"
      parameters:
      - name: "offset"
        in: "query"
        description: "Pagination offset for related books list. Default is 0."
        required: false
        type: "integer"
      - name: "limit"
        in: "query"
        description: "Maximum number of items for related books list per page. Default is 6."
        required: false
        type: "integer"
      - name: "Id_book"
        in: "path"
        description: "ID of book to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Book-List"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Book not found"
        500:
          description: "Internal Error"
      x-swagger-router-controller: "Book"
  /books/{Id_book}/count:
    get:
      tags:
      - "book"
      summary: "Number of related books by Id_book"
      description: "Returns the number of books"
      operationId: "getRelatedBooksCountById"
      produces:
      - "application/json"
      parameters:
      - name: "Id_book"
        in: "path"
        description: "ID of book to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "integer"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Book not found"
        500:
          description: "Internal Error"
      x-swagger-router-controller: "Book"
  /authors:
    get:
      tags:
      - "author"
      summary: "Authors available in the inventory"
      description: "List of authors available in the inventory"
      operationId: "authorsGET"
      produces:
      - "application/json"
      parameters:
      - name: "offset"
        in: "query"
        description: "Pagination offset. Default is 0."
        required: false
        type: "integer"
      - name: "limit"
        in: "query"
        description: "Maximum number of items per page. Default is 20 and cannot exceed 500."
        required: false
        type: "integer"
      - name: "search"
        in: "query"
        description: "Name of the author to search in the database"
        required: false
        type: "string"
      responses:
        200:
          description: "A collection of Authors"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Author-List"
        404:
          description: "Unexpected error"
        500:
          description: "Internal Error"
      x-swagger-router-controller: "Author"
  /authors/count:
    get:
      tags:
      - "author"
      summary: "Number of authors in inventory"
      description: "Returns a number"
      operationId: "getAuthorsCount"
      produces:
      - "application/json"
      parameters:
      - name: "offset"
        in: "query"
        description: "Pagination offset. Default is 0."
        required: false
        type: "integer"
      - name: "limit"
        in: "query"
        description: "Maximum number of items per page. Default is 6."
        required: false
        type: "integer"
      - name: "search"
        in: "query"
        description: "Name of the author to search in the database"
        required: false
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "integer"
        404:
          description: "Unexpected error"
        500:
          description: "Internal Error"
      x-swagger-router-controller: "Author"
  /authors/{Id_author}:
    get:
      tags:
      - "author"
      summary: "Find author by ID"
      description: "Returns a author"
      operationId: "getAuthorById"
      produces:
      - "application/json"
      parameters:
      - name: "offset"
        in: "query"
        description: "Pagination offset. Default is 0."
        required: false
        type: "integer"
      - name: "limit"
        in: "query"
        description: "Maximum number of items per page. Default is 20 and cannot exceed 500."
        required: false
        type: "integer"
      - in: path
        name: Id_author
        description: "ID of author to return"
        required: true
        format: "int64"
        type: integer
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Author"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Author not found"
        500:
          description: "Internal Error"
      x-swagger-router-controller: "Author"
  /authors/{Id_author}/written_books:
    get:
      tags:
      - "author"
      summary: "Find written books by Id_author"
      description: "Returns a set of books"
      operationId: "getWrittenBooksById"
      produces:
      - "application/json"
      parameters:
      - name: "offset"
        in: "query"
        description: "Pagination offset. Default is 0."
        required: false
        type: "integer"
      - name: "limit"
        in: "query"
        description: "Maximum number of items per page. Default is 20 and cannot exceed 500."
        required: false
        type: "integer"
      - in: path
        name: Id_author
        description: "ID of author to return"
        required: true
        format: "int64"
        type: integer
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
                $ref: "#/definitions/Book-List"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Author not found"
        500:
          description: "Internal Error"
      x-swagger-router-controller: "Author"
  /authors/{Id_author}/count:
    get:
      tags:
      - "author"
      summary: "Number of books written by Id_author"
      description: "Returns a number"
      operationId: "getWrittenBooksCountById"
      produces:
      - "application/json"
      parameters:
      - in: path
        name: Id_author
        description: "ID of author to return"
        required: true
        format: "int64"
        type: integer
      responses:
        200:
          description: "successful operation"
          schema:
            type: "integer"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Author not found"
        500:
          description: "Internal Error"
      x-swagger-router-controller: "Author"
  /events:
    get:
      tags:
      - "event"
      summary: "Events available in the inventory"
      description: "List of events available in the inventory"
      operationId: "eventsGET"
      produces:
      - "application/json"
      parameters:
      - name: "offset"
        in: "query"
        description: "Pagination offset. Default is 0."
        required: false
        type: "integer"
      - name: "limit"
        in: "query"
        description: "Maximum number of items per page. Default is 20 and cannot exceed 500."
        required: false
        type: "integer"
      - name: "orderBy"
        in: "query"
        description: "Filter on events."
        required: false
        type: "string"
        enum: ["current_month","latest"]
      responses:
        200:
          description: "A collection of Events"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Event-List"
        404:
          description: "Unexpected error"
        500:
          description: "Internal Error"
      x-swagger-router-controller: "Event"
  /events/count:
    get:
      tags:
      - "event"
      summary: "Number of events in inventory"
      description: "Returns a number"
      operationId: "getEventsCount"
      produces:
      - "application/json"
      parameters:
      - name: "offset"
        in: "query"
        description: "Pagination offset. Default is 0."
        required: false
        type: "integer"
      - name: "limit"
        in: "query"
        description: "Maximum number of items per page. Default is 20 and cannot exceed 500."
        required: false
        type: "integer"
      - name: "orderBy"
        in: "query"
        description: "Filter on events."
        required: false
        type: "string"
        enum: ["current_month","latest"]
      responses:
        200:
          description: "successful operation"
          schema:
            type: "integer"
        404:
          description: "Unexpected error"
        500:
          description: "Internal Error"
      x-swagger-router-controller: "Event"
  /events/{Id_event}:
    get:
      tags:
      - "event"
      summary: "Find event by ID"
      description: "Returns a event"
      operationId: "getEventById"
      produces:
      - "application/json"
      parameters:
      - name: "Id_event"
        in: "path"
        description: "ID of event to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Event"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Event not found"
        500:
          description: "Internal Error"
      x-swagger-router-controller: "Event"
  /user:
    get:
      tags:
        - "user"
      summary: "get current User"
      description: "get current User"
      operationId: "userGET"
      produces:
      - "application/json"
      responses:
        200:
          description: "Current user"
          schema:
            $ref: "#/definitions/User"
        404:
          description: "Unexpected error"
        500:
          description: "Internal Error"
      x-swagger-router-controller: "User"
  /user/register:
    post:
      tags:
      - "user"
      summary: "Register"
      description: "Register into the store"
      operationId: "userRegisterPOST"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "formData"
        required: true
        type: "string"
      - name: "email"
        in: "formData"
        required: true
        type: "string"
      - name: "password"
        in: "formData"
        required: true
        type: "string"
      - name: "confirmpassword"
        in: "formData"
        required: true
        type: "string"
      responses:
        200:
          description: "succesfull registration"
        400:
          description: "bad request"
        500:
          description: "Internal Error"
      x-swagger-router-controller: "User"
  /user/login:
    post:
      tags:
      - "user"
      summary: "Login"
      description: "Login with a form"
      operationId: "userLoginPOST"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - name: "email"
        in: "formData"
        required: true
        type: "string"
      - name: "password"
        in: "formData"
        required: true
        type: "string"
      responses:
        200:
          description: "succesfull login"
        400:
          description: "bad request"
        500:
          description: "Internal Error"
      x-swagger-router-controller: "User"
  /user/logout:
    delete:
      tags:
      - "user"
      summary: "Logout"
      description: "Logout, delete session"
      operationId: "userLogoutDELETE"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      responses:
        200:
          description: "succesfull logout"
        500:
          description: "Internal Error"
      x-swagger-router-controller: "User"
  /cart:
    get:
      tags:
      - "cart"
      summary: "Get the content of the cart"
      operationId: "getCartById"
      produces:
      - "application/json"
      responses:
        200:
          description: "succesful operartion"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Cart-Item"
        401:
          description: "unauthorized"
        500:
          description: "Internal Error"
      x-swagger-router-controller: "Cart"
    post:
      tags:
      - "cart"
      summary: "Add a new book to the cart"
      operationId: "addBookById"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Book object that needs to be added to the cart"
        required: true
        schema:
          $ref: "#/definitions/Cart"
      responses:
        200:
          description: "succesful operartion"
        400:
          description: "bad request"
        401:
          description: "unauthorized"
        500:
          description: "Internal Error"
      x-swagger-router-controller: "Cart"
    put:
      tags:
      - "cart"
      summary: "Edit the quantity of a book in the cart"
      operationId: "updateBookQuantity"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Book object that needs to be modified to the cart"
        required: true
        schema:
          $ref: "#/definitions/Cart"
      responses:
        200:
          description: "succesful operartion"
        400:
          description: "bad request"
        401:
          description: "unauthorized"
        500:
          description: "Internal Error"
      x-swagger-router-controller: "Cart"
    delete:
      tags:
      - "cart"
      summary: "Delete a book in the cart"
      operationId: "deleteBookById"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Book object that needs to be modified to the cart"
        required: true
        schema:
          type: "array"
          items: 
            $ref: "#/definitions/Cart"
      responses:
        200:
          description: "succesful operartion"
        400:
          description: "bad request"
        401:
          description: "unauthorized"
        500:
          description: "Internal Error"
      x-swagger-router-controller: "Cart"
  /cart/count:
    get:
      tags:
      - "cart"
      summary: "Get the number of books in cart"
      operationId: "getCartCountById"
      produces:
      - "application/json"
      responses:
        200:
          description: "succesful operartion"
          schema:
            type: "integer"
        401:
          description: "unauthorized"
        500:
          description: "Internal Error"
      x-swagger-router-controller: "Cart"
  /faq:
    get:
      tags:
      - "faq"
      summary: "View all the faqs"
      operationId: "faqGET"
      produces:
      - "application/json"
      responses:
        200:
          description: "succesful operartion"
          schema:
            $ref: "#/definitions/Faq"
        404:
          description: "unexpected error"
        500:
          description: "Internal Error"
      x-swagger-router-controller: "Faq"
  /genres:
    get:
      tags:
      - "genre"
      summary: "View all the genres"
      operationId: "genresGET"
      produces:
      - "application/json"
      responses:
        200:
          description: "succesful operartion"
          schema:
            $ref: "#/definitions/Genre"
        404:
          description: "unexpected error"
        500:
          description: "Internal Error"
      x-swagger-router-controller: "Genre"
  /themes:
    get:
      tags:
      - "theme"
      summary: "View all the themes"
      operationId: "themesGET"
      produces:
      - "application/json"
      responses:
        200:
          description: "succesful operartion"
          schema:
            $ref: "#/definitions/Theme"
        404:
          description: "unexpected error"
        500:
          description: "Internal Error"
      x-swagger-router-controller: "Theme"    
definitions:
  User:
    type: "object"
    properties:
      id_user:
        type: "integer"
      name:
        type: "string"
      email:
        type: "string"
    title: "User"
    description: "A user"
    example:
      id_user: 1
      name: "Giacomo"
      email: "gia.fuse@mail.com"
  Author:
    type: "object"
    properties:
      id_author:
        type: "integer"
      name:
        type: "string"
      bio:
        type: "string"
      photo:
        type: "string"
      books:
        type: "array"
        items:
          $ref: "#/definitions/Book-List"
    title: "Author"
    description: "An author"
    example:
      id_author: 3
      name: "Paulo Coelho"
      bio: "Paulo Coelho’s life..."
      photo: "../assets/img/authors/coelho.jpg"
      books: [{
        id_book: 5,
        title: "Romeo and Juliet",
        price_paper: 10.5,
        price_ebook: 4.5,
        cover_img: "../assets/img/books/book-9.jpg",
        support: "paper",
        best_seller: "true",
        our_favorite: "false",
        auth_names: [
          "William Shakespeare"
        ],
        auth_ids: [
          4
        ]
      }]
  Author-List:
    type: "object"
    properties:
      id_author:
        type: "integer"
      name:
        type: "string"
      bio:
        type: "string"
      photo:
        type: "string"
    title: "Author-List"
    description: "An author"
    example:
      id_author: 3
      name: "Paulo Coelho"
      bio: "Paulo Coelho’s life..."
      photo: "../assets/img/authors/coelho.jpg"
  Event:
    type: "object"
    properties:
      id_event:
        type: "integer"
      id_book:
        type: "integer"
      name:
        type: "string"
      date_day:
        type: "integer"
      date_month:
        type: "integer"
      date_year:
        type: "integer"
      when:
        type: "string"
      location:
        type: "string"
      city:
        type: "string"
      description:
        type: "string"
      img:
        type: "string"
      location_img:
        type: "string"
      book:
        type: "array"
        items:
          $ref: "#/definitions/Book"
    title: "Event"
    description: "An event"
    example:
      id_event: 1
      id_book: 1
      name: "Coelho presents The Spy"
      date_day: 13
      date_month: 9
      date_year: 2019
      when: "from 11:00AM to 12.30AM"
      location: "College Green, Dublin 2, D02 VR66, Ireland"
      city: "Dublin"
      description: "In the evocative library..."
      img: "../assets/img/events/event-3.jpg"
      location_img: "../assets/img/events/event3.jpg"
      book: [{
        id_book: 4,
        id_genre: 5,
        title: "The Spy",
        description: "In his new novel, Paulo Coelho...",
        price_paper: 14.70,
        price_ebook: 9.90,
        cover_img: "../assets/img/books/book-8.jpg",
        support: "both",
        pages: 208,
        rating: 2,
        language: "English",
        interview: "",
        our_favorite: False,
        best_seller: False,
        authors: [{
          name: "Paulo Coelho",
          id_author: 3
        }],
        genre: [{
          name: "History",
          id_genre: 5
        }],
        themes: [{
          theme_name: "Love",
          id_theme: 8
        },{
          theme_name: "Erotism",
          id_theme: 7
        }]
      }]
  Event-List:
    type: "object"
    properties:
      id_event:
        type: "integer"
      name:
        type: "string"
      city:
        type: "string"
      date_day:
        type: "integer"
      date_month:
        type: "integer"
      date_year:
        type: "integer"
      img:
        type: "string"
    title: "Event-List"
    description: "An event"
    example:
      id_event: 3
      name: "Coelho presents The Spy"
      city: "Dublin"
      date_day: 13
      date_month: 9
      date_year: 2019
      img: "../assets/img/events/event-3.jpg"
  Cart:
    type: "object"
    properties:
      Id_book: 
        type: "integer"
      support:
        type: "string"
        enum:
        - "paper"
        - "ebook"
      title:
        type: "string"
      cover_img:
        type: "string"
      price:
        type: "number"
      quantity:
        type: "integer"
    title: "Cart"
    description: "Order for books"
    example:
      Id_book: 4
      title: "The Spy"
      cover_img: "../assets/img/books/book-8.jpg"
      price: 14.7
      support: "paper"
      quantity: 2
  Cart-Item:
    type: "object"
    properties:
      id_user: 
        type: "integer"
      id_book: 
        type: "integer"
      quantity:
        type: "integer"
      title:
        type: "string"
      support:
        type: "string"
        enum:
        - "paper"
        - "ebook"
      cover_img:
        type: "string"
      price:
        type: "number"
      auth_names:
        type: "array"
        items: 
          type: "string"
      auth_ids:
        type: "array"
        items: 
          type: "integer"
    title: "Cart-Item"
    description: "Order for books"
    example:
      id_user: 4
      id_book: 4
      support: "paper"
      quantity: 2
      title: "The Spy"
      cover_img: "../assets/img/books/book-8.jpg"
      price: 14.7
      auth_names: [
        "Paulo Coelho"
      ]
      auth_ids: [
        3
      ]
  Book:
    type: "object"
    properties:
      id_book:
        type: "integer"
      id_genre:
        type: "integer"
      title:
        type: "string"
      description:
        type: "string"
      price_paper:
        type: "number"
      price_ebook:
        type: "number"
      cover_img:
        type: "string"
      support:
        type: "string"
        enum:
        - "paper"
        - "ebook"
        - "both"
      pages:
        type: "integer"
      rating:
        description: "an integer number between 1 and 5"
        type: "integer"
      language:
        type: "string"
      interview:
        type: "string"
      our_favorite:
        type: "boolean"
      best_seller:
        type: "boolean"
      authors:
        type: "array"
        items: 
          type: "object"
          properties:
            name:
              type: "string"
            id_author:
              type: "integer"
      genre:
        type: "array"
        items:
          $ref: "#/definitions/Genre"
      review:
        type: "array"
        items:
          $ref: "#/definitions/Review"
      themes:
        type: "array"
        items:
          $ref: "#/definitions/Theme"
      event:
        type: "array"
        items:
          $ref: "#/definitions/Event"
      similar_books:
        type: "array"
        items:
          $ref: "#/definitions/Book-List"
    title: "Book"
    description: "A book for sale in the store"
    example:
      id_book: 4
      id_genre: 5
      title: "The Spy"
      description: "In his new novel, Paulo Coelho..."
      price_paper: 14.70
      price_ebook: 9.90
      cover_img: "../assets/img/books/book-8.jpg"
      support: "both"
      pages: 208
      rating: 2
      language: "English"
      interview: ""
      our_favorite: False
      best_seller: False
      authors: [{
        name: "Paulo Coelho",
        id_author: 3
      }]
      genre: [{
        name: "History",
        id_genre: 5
      }]
      review: [{
        id_review: 8,
        id_book: 4,
        writer: "Los Angeles Times",
        text: "Coelho has created a portrait of an anachronistic woman, who was destroyed by her times and became a legend."
      }]
      themes: [{
        theme_name: "Love",
        id_theme: 8
      },{
        theme_name: "Erotism",
        id_theme: 7
      }]
      event: [{
        id_event: 3,
        id_book: 4,
        name: "Coelho presents The Spy",
        date_day: 13,
        date_month: 9,
        date_year": 2019,
        when: "from 11:00AM to 12.30AM",
        location": "College Green, Dublin 2, D02 VR66, Ireland",
        cit": "Dublin",
        description": "In the evocative library of the Trinity Collage in Dublin, the book by Paulo Coelho <b>\"The Spy\"</b> is presented, a compelling story of Mata Hari, a woman capable of making her way in society by arousing jealousy and envy. During the event it will be possible to obtain a copy signed by the author, the world famous writer in fact will be present during the event and will answer the questions of the present public. So don't miss this unmissable opportunity!",
        img: "../assets/img/events/event-3.jpg",
        location_img: "../assets/img/events/event3.jpg"
      }]
      similar_books: [{
        id_book: 1,
        title: "The Lord of the Ring - The Fellowship of the Ring",
        price_paper: 12.4,
        price_ebook: 5.9,
        cover_img: "../assets/img/books/book-1.jpg",
        support: "both",
        best_seller: "true",
        interview: "https://www.youtube.com/embed/yFexwNCYenI",
        auth_names: [
          "J. R. R. Tolkien"
        ],
        auth_ids: [
          1
        ]
      }]
  Book-List:
    type: "object"
    properties:
      id_book:
        type: "integer"
      title:
        type: "string"
      price_paper:
        type: "number"
      price_ebook:
        type: "number"
      cover_img:
        type: "string"
      support:
        type: "string"
        enum:
        - "paper"
        - "ebook"
        - "both"
      rating:
        description: "an integer number between 1 and 5"
        type: "integer"
      our_favorite:
        type: "boolean"
      best_seller:
        type: "boolean"
      interview:
        type: "string"
      auth_names:
        type: "array"
        items: 
          type: "string"
      auth_ids:
        type: "array"
        items: 
          type: "integer"
    title: "Book-List"
    description: "A book for sale in the store"
    example:
      id_book: 4
      title: "The Spy"
      price_paper: 14.70
      price_ebook: 9.90
      cover_img: "../assets/img/books/book-8.jpg"
      support: "both"
      rating: 2
      our_favorite: False
      best_seller: False
      interview: ""
      auth_names: [
        "Paulo Coelho"
      ]
      auth_ids: [
        3
      ]
  Review:
    type: "object"
    properties:
      id_review:
        type: "integer"
      id_book:
        type: "integer"
      writer:
        type: "string"
      text:
        type: "string"
    title: "Review"
    description: "A review of a book"
    example:
      id_review: 8
      id_book: 4
      writer: "Los Angeles Times"
      text: "Coelho has created a portrait of an anachronistic woman, who was destroyed by her times and became a legend."
  Faq:
    type: "object"
    properties:
      id_faq:
        type: "integer"
      question:
        type: "string"
      answer:
        type: "string"
    title: "Faq"
    description: "A Faq"
    example:
      id_faq: 1
      question: "Can I order by email or fax?"
      answer: "We do not accept orders by fax or email..."
  Genre:
    type: "object"
    properties:
      id_genre:
        type: "integer"
      name:
        type: "string"
    title: "Genre"
    description: "A Genre"
    example:
      id_genre: 1
      name: "Fantasy"
  Theme:
    type: "object"
    properties:
      id_theme:
        type: "integer"
      theme_name:
        type: "string"
    title: "Theme"
    description: "A Theme"
    example:
      id_theme: 1
      theme_name: "War"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
